[build]
  command = """
    echo "üîß Installing Python dependencies..." &&
    pip install cryptography &&
    echo "" &&
    echo "üì¶ Fetching and decrypting energy data (with caching)..." &&
    mkdir -p static/data &&
    python decrypt_data_cached.py &&
    echo "" &&
    echo "üèóÔ∏è  Building Hugo site..." &&
    hugo --minify
  """
  publish = "public"

[build.environment]
  HUGO_VERSION = "0.124.0"
  PYTHON_VERSION = "3.11"

# Cache data directory between builds for faster deployments
[[plugins]]
  package = "netlify-plugin-cache"

  [plugins.inputs]
    # Cache the decrypted data and metadata
    paths = [
      "static/data"
    ]

# Security headers for all pages
[[headers]]
  for = "/*"
  [headers.values]
    # Content Security Policy - allow our own scripts and Plotly CDN
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.plot.ly; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' https://api.energyzero.nl; frame-ancestors 'none'; base-uri 'self'; form-action 'self'"
    # Security headers
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "geolocation=(), microphone=(), camera=()"

# Cache static assets aggressively (JS, CSS, fonts, images)
[[headers]]
  for = "/js/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"  # 1 year

[[headers]]
  for = "/css/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"  # 1 year

[[headers]]
  for = "/fonts/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"  # 1 year

[[headers]]
  for = "/images/*"
  [headers.values]
    Cache-Control = "public, max-age=2592000"  # 30 days

# Cache data files for shorter time (they update daily)
[[headers]]
  for = "/data/*"
  [headers.values]
    Cache-Control = "public, max-age=3600"  # 1 hour (data updates daily, but allow some caching)

# Compression for all text-based assets
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = false  # We're using ES6 modules
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# Production context with optimized base URL
[context.production]
  command = """
    echo "üöÄ Production build starting..." &&
    pip install cryptography &&
    mkdir -p static/data &&
    python decrypt_data_cached.py &&
    hugo --minify --baseURL $DEPLOY_PRIME_URL &&
    echo "‚úì Production build complete!"
  """

# Deploy preview context (for PRs)
[context.deploy-preview]
  command = """
    echo "üîç Deploy preview build..." &&
    pip install cryptography &&
    mkdir -p static/data &&
    python decrypt_data_cached.py --force &&
    hugo --minify --baseURL $DEPLOY_PRIME_URL --buildDrafts &&
    echo "‚úì Preview build complete!"
  """

# Branch deploy context
[context.branch-deploy]
  command = """
    echo "üåø Branch deploy build..." &&
    pip install cryptography &&
    mkdir -p static/data &&
    python decrypt_data_cached.py &&
    hugo --minify --baseURL $DEPLOY_PRIME_URL &&
    echo "‚úì Branch build complete!"
  """

# Redirect rules (optional - add if needed)
# [[redirects]]
#   from = "/old-path"
#   to = "/new-path"
#   status = 301

# Environment-specific settings
[context.production.environment]
  HUGO_ENV = "production"

[context.deploy-preview.environment]
  HUGO_ENV = "preview"

[context.branch-deploy.environment]
  HUGO_ENV = "branch"
